// Generated from e:\_Project\nodejs\mcb\src\mcb.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u001d\u0090\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0003\u0002\u0003\u0002\u0003",
    "\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0006\u0003",
    "\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003",
    "\t\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003",
    "\u000b\u0003\f\u0003\f\u0003\f\u0003\r\u0003\r\u0003\r\u0003\r\u0003",
    "\r\u0003\r\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000f\u0003\u000f",
    "\u0003\u0010\u0003\u0010\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012",
    "\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014\u0003\u0015\u0003\u0015",
    "\u0003\u0016\u0003\u0016\u0003\u0017\u0003\u0017\u0003\u0018\u0003\u0018",
    "\u0003\u0019\u0006\u0019x\n\u0019\r\u0019\u000e\u0019y\u0003\u0019\u0003",
    "\u0019\u0003\u001a\u0006\u001a\u007f\n\u001a\r\u001a\u000e\u001a\u0080",
    "\u0003\u001b\u0003\u001b\u0007\u001b\u0085\n\u001b\f\u001b\u000e\u001b",
    "\u0088\u000b\u001b\u0003\u001c\u0006\u001c\u008b\n\u001c\r\u001c\u000e",
    "\u001c\u008c\u0003\u001c\u0003\u001c\u0002\u0002\u001d\u0003\u0003\u0005",
    "\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b",
    "\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011!\u0012",
    "#\u0013%\u0014\'\u0015)\u0016+\u0017-\u0018/\u00191\u001a3\u001b5\u001c",
    "7\u001d\u0003\u0002\u0007\u0004\u0002\f\f\u000f\u000f\u0003\u00022;",
    "\u0005\u0002C\\aac|\u0007\u0002002;C\\aac|\u0005\u0002\u000b\f\u000e",
    "\u000f\"\"\u0002\u0093\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005",
    "\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t",
    "\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r",
    "\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011",
    "\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015",
    "\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019",
    "\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d",
    "\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!",
    "\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003",
    "\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002",
    "\u0002\u0002\u0002+\u0003\u0002\u0002\u0002\u0002-\u0003\u0002\u0002",
    "\u0002\u0002/\u0003\u0002\u0002\u0002\u00021\u0003\u0002\u0002\u0002",
    "\u00023\u0003\u0002\u0002\u0002\u00025\u0003\u0002\u0002\u0002\u0002",
    "7\u0003\u0002\u0002\u0002\u00039\u0003\u0002\u0002\u0002\u0005=\u0003",
    "\u0002\u0002\u0002\u0007?\u0003\u0002\u0002\u0002\tC\u0003\u0002\u0002",
    "\u0002\u000bF\u0003\u0002\u0002\u0002\rI\u0003\u0002\u0002\u0002\u000f",
    "K\u0003\u0002\u0002\u0002\u0011M\u0003\u0002\u0002\u0002\u0013O\u0003",
    "\u0002\u0002\u0002\u0015Q\u0003\u0002\u0002\u0002\u0017V\u0003\u0002",
    "\u0002\u0002\u0019Y\u0003\u0002\u0002\u0002\u001b_\u0003\u0002\u0002",
    "\u0002\u001db\u0003\u0002\u0002\u0002\u001fd\u0003\u0002\u0002\u0002",
    "!f\u0003\u0002\u0002\u0002#h\u0003\u0002\u0002\u0002%j\u0003\u0002\u0002",
    "\u0002\'l\u0003\u0002\u0002\u0002)n\u0003\u0002\u0002\u0002+p\u0003",
    "\u0002\u0002\u0002-r\u0003\u0002\u0002\u0002/t\u0003\u0002\u0002\u0002",
    "1w\u0003\u0002\u0002\u00023~\u0003\u0002\u0002\u00025\u0082\u0003\u0002",
    "\u0002\u00027\u008a\u0003\u0002\u0002\u00029:\u0007h\u0002\u0002:;\u0007",
    "w\u0002\u0002;<\u0007p\u0002\u0002<\u0004\u0003\u0002\u0002\u0002=>",
    "\u0007<\u0002\u0002>\u0006\u0003\u0002\u0002\u0002?@\u0007g\u0002\u0002",
    "@A\u0007p\u0002\u0002AB\u0007f\u0002\u0002B\b\u0003\u0002\u0002\u0002",
    "CD\u0007?\u0002\u0002DE\u0007?\u0002\u0002E\n\u0003\u0002\u0002\u0002",
    "FG\u0007@\u0002\u0002GH\u0007?\u0002\u0002H\f\u0003\u0002\u0002\u0002",
    "IJ\u0007\u0080\u0002\u0002J\u000e\u0003\u0002\u0002\u0002KL\u0007`\u0002",
    "\u0002L\u0010\u0003\u0002\u0002\u0002MN\u0007?\u0002\u0002N\u0012\u0003",
    "\u0002\u0002\u0002OP\u0007%\u0002\u0002P\u0014\u0003\u0002\u0002\u0002",
    "QR\u0007f\u0002\u0002RS\u0007k\u0002\u0002ST\u0007e\u0002\u0002TU\u0007",
    "v\u0002\u0002U\u0016\u0003\u0002\u0002\u0002VW\u0007c\u0002\u0002WX",
    "\u0007v\u0002\u0002X\u0018\u0003\u0002\u0002\u0002YZ\u0007u\u0002\u0002",
    "Z[\u0007e\u0002\u0002[\\\u0007q\u0002\u0002\\]\u0007t\u0002\u0002]^",
    "\u0007g\u0002\u0002^\u001a\u0003\u0002\u0002\u0002_`\u0007c\u0002\u0002",
    "`a\u0007u\u0002\u0002a\u001c\u0003\u0002\u0002\u0002bc\u0007,\u0002",
    "\u0002c\u001e\u0003\u0002\u0002\u0002de\u00071\u0002\u0002e \u0003\u0002",
    "\u0002\u0002fg\u0007\'\u0002\u0002g\"\u0003\u0002\u0002\u0002hi\u0007",
    "-\u0002\u0002i$\u0003\u0002\u0002\u0002jk\u0007/\u0002\u0002k&\u0003",
    "\u0002\u0002\u0002lm\u0007*\u0002\u0002m(\u0003\u0002\u0002\u0002no",
    "\u0007+\u0002\u0002o*\u0003\u0002\u0002\u0002pq\u00070\u0002\u0002q",
    ",\u0003\u0002\u0002\u0002rs\u0007]\u0002\u0002s.\u0003\u0002\u0002\u0002",
    "tu\u0007_\u0002\u0002u0\u0003\u0002\u0002\u0002vx\t\u0002\u0002\u0002",
    "wv\u0003\u0002\u0002\u0002xy\u0003\u0002\u0002\u0002yw\u0003\u0002\u0002",
    "\u0002yz\u0003\u0002\u0002\u0002z{\u0003\u0002\u0002\u0002{|\b\u0019",
    "\u0002\u0002|2\u0003\u0002\u0002\u0002}\u007f\t\u0003\u0002\u0002~}",
    "\u0003\u0002\u0002\u0002\u007f\u0080\u0003\u0002\u0002\u0002\u0080~",
    "\u0003\u0002\u0002\u0002\u0080\u0081\u0003\u0002\u0002\u0002\u00814",
    "\u0003\u0002\u0002\u0002\u0082\u0086\t\u0004\u0002\u0002\u0083\u0085",
    "\t\u0005\u0002\u0002\u0084\u0083\u0003\u0002\u0002\u0002\u0085\u0088",
    "\u0003\u0002\u0002\u0002\u0086\u0084\u0003\u0002\u0002\u0002\u0086\u0087",
    "\u0003\u0002\u0002\u0002\u00876\u0003\u0002\u0002\u0002\u0088\u0086",
    "\u0003\u0002\u0002\u0002\u0089\u008b\t\u0006\u0002\u0002\u008a\u0089",
    "\u0003\u0002\u0002\u0002\u008b\u008c\u0003\u0002\u0002\u0002\u008c\u008a",
    "\u0003\u0002\u0002\u0002\u008c\u008d\u0003\u0002\u0002\u0002\u008d\u008e",
    "\u0003\u0002\u0002\u0002\u008e\u008f\b\u001c\u0002\u0002\u008f8\u0003",
    "\u0002\u0002\u0002\u0007\u0002y\u0080\u0086\u008c\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class mcbLexer extends antlr4.Lexer {

    static grammarFileName = "mcb.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'fun'", "':'", "'end'", "'=='", "'>='", 
                         "'~'", "'^'", "'='", "'#'", "'dict'", "'at'", "'score'", 
                         "'as'", "'*'", "'/'", "'%'", "'+'", "'-'", "'('", 
                         "')'", "'.'", "'['", "']'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          "NEWLINE", "INT", "CHAR", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "NEWLINE", "INT", 
                      "CHAR", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

mcbLexer.EOF = antlr4.Token.EOF;
mcbLexer.T__0 = 1;
mcbLexer.T__1 = 2;
mcbLexer.T__2 = 3;
mcbLexer.T__3 = 4;
mcbLexer.T__4 = 5;
mcbLexer.T__5 = 6;
mcbLexer.T__6 = 7;
mcbLexer.T__7 = 8;
mcbLexer.T__8 = 9;
mcbLexer.T__9 = 10;
mcbLexer.T__10 = 11;
mcbLexer.T__11 = 12;
mcbLexer.T__12 = 13;
mcbLexer.T__13 = 14;
mcbLexer.T__14 = 15;
mcbLexer.T__15 = 16;
mcbLexer.T__16 = 17;
mcbLexer.T__17 = 18;
mcbLexer.T__18 = 19;
mcbLexer.T__19 = 20;
mcbLexer.T__20 = 21;
mcbLexer.T__21 = 22;
mcbLexer.T__22 = 23;
mcbLexer.NEWLINE = 24;
mcbLexer.INT = 25;
mcbLexer.CHAR = 26;
mcbLexer.WS = 27;



