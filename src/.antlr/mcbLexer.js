// Generated from ./src/mcb.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u001a\u0086\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0003\u0002\u0003\u0002",
    "\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004",
    "\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005",
    "\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\b\u0003\b\u0003\t\u0003\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003",
    "\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003\r\u0003",
    "\u000e\u0003\u000e\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u0010\u0003",
    "\u0010\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0013\u0003",
    "\u0013\u0003\u0014\u0003\u0014\u0003\u0015\u0003\u0015\u0003\u0016\u0006",
    "\u0016p\n\u0016\r\u0016\u000e\u0016q\u0003\u0017\u0006\u0017u\n\u0017",
    "\r\u0017\u000e\u0017v\u0003\u0018\u0003\u0018\u0007\u0018{\n\u0018\f",
    "\u0018\u000e\u0018~\u000b\u0018\u0003\u0019\u0006\u0019\u0081\n\u0019",
    "\r\u0019\u000e\u0019\u0082\u0003\u0019\u0003\u0019\u0002\u0002\u001a",
    "\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t",
    "\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010",
    "\u001f\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+\u0017-\u0018/\u0019",
    "1\u001a\u0003\u0002\u0007\u0004\u0002\f\f\u000f\u000f\u0003\u00022;",
    "\u0005\u0002B\\aac|\u0007\u0002002;C\\aac|\u0005\u0002\u000b\f\u000e",
    "\u000f\"\"\u0002\u0089\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005",
    "\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t",
    "\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r",
    "\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011",
    "\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015",
    "\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019",
    "\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d",
    "\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!",
    "\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003",
    "\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002",
    "\u0002\u0002\u0002+\u0003\u0002\u0002\u0002\u0002-\u0003\u0002\u0002",
    "\u0002\u0002/\u0003\u0002\u0002\u0002\u00021\u0003\u0002\u0002\u0002",
    "\u00033\u0003\u0002\u0002\u0002\u00056\u0003\u0002\u0002\u0002\u0007",
    ";\u0003\u0002\u0002\u0002\tA\u0003\u0002\u0002\u0002\u000bG\u0003\u0002",
    "\u0002\u0002\rJ\u0003\u0002\u0002\u0002\u000fM\u0003\u0002\u0002\u0002",
    "\u0011O\u0003\u0002\u0002\u0002\u0013Q\u0003\u0002\u0002\u0002\u0015",
    "V\u0003\u0002\u0002\u0002\u0017X\u0003\u0002\u0002\u0002\u0019Z\u0003",
    "\u0002\u0002\u0002\u001b]\u0003\u0002\u0002\u0002\u001d`\u0003\u0002",
    "\u0002\u0002\u001fb\u0003\u0002\u0002\u0002!d\u0003\u0002\u0002\u0002",
    "#f\u0003\u0002\u0002\u0002%h\u0003\u0002\u0002\u0002\'j\u0003\u0002",
    "\u0002\u0002)l\u0003\u0002\u0002\u0002+o\u0003\u0002\u0002\u0002-t\u0003",
    "\u0002\u0002\u0002/x\u0003\u0002\u0002\u00021\u0080\u0003\u0002\u0002",
    "\u000234\u0007k\u0002\u000245\u0007h\u0002\u00025\u0004\u0003\u0002",
    "\u0002\u000267\u0007v\u0002\u000278\u0007j\u0002\u000289\u0007g\u0002",
    "\u00029:\u0007p\u0002\u0002:\u0006\u0003\u0002\u0002\u0002;<\u0007g",
    "\u0002\u0002<=\u0007p\u0002\u0002=>\u0007f\u0002\u0002>?\u0007k\u0002",
    "\u0002?@\u0007h\u0002\u0002@\b\u0003\u0002\u0002\u0002AB\u0007d\u0002",
    "\u0002BC\u0007n\u0002\u0002CD\u0007q\u0002\u0002DE\u0007e\u0002\u0002",
    "EF\u0007m\u0002\u0002F\n\u0003\u0002\u0002\u0002GH\u0007?\u0002\u0002",
    "HI\u0007?\u0002\u0002I\f\u0003\u0002\u0002\u0002JK\u0007@\u0002\u0002",
    "KL\u0007?\u0002\u0002L\u000e\u0003\u0002\u0002\u0002MN\u0007B\u0002",
    "\u0002N\u0010\u0003\u0002\u0002\u0002OP\u00070\u0002\u0002P\u0012\u0003",
    "\u0002\u0002\u0002QR\u0007j\u0002\u0002RS\u0007g\u0002\u0002ST\u0007",
    "t\u0002\u0002TU\u0007g\u0002\u0002U\u0014\u0003\u0002\u0002\u0002VW",
    "\u0007?\u0002\u0002W\u0016\u0003\u0002\u0002\u0002XY\u0007%\u0002\u0002",
    "Y\u0018\u0003\u0002\u0002\u0002Z[\u0007c\u0002\u0002[\\\u0007v\u0002",
    "\u0002\\\u001a\u0003\u0002\u0002\u0002]^\u0007c\u0002\u0002^_\u0007",
    "u\u0002\u0002_\u001c\u0003\u0002\u0002\u0002`a\u0007,\u0002\u0002a\u001e",
    "\u0003\u0002\u0002\u0002bc\u00071\u0002\u0002c \u0003\u0002\u0002\u0002",
    "de\u0007\'\u0002\u0002e\"\u0003\u0002\u0002\u0002fg\u0007-\u0002\u0002",
    "g$\u0003\u0002\u0002\u0002hi\u0007/\u0002\u0002i&\u0003\u0002\u0002",
    "\u0002jk\u0007*\u0002\u0002k(\u0003\u0002\u0002\u0002lm\u0007+\u0002",
    "\u0002m*\u0003\u0002\u0002\u0002np\t\u0002\u0002\u0002on\u0003\u0002",
    "\u0002\u0002pq\u0003\u0002\u0002\u0002qo\u0003\u0002\u0002\u0002qr\u0003",
    "\u0002\u0002\u0002r,\u0003\u0002\u0002\u0002su\t\u0003\u0002\u0002t",
    "s\u0003\u0002\u0002\u0002uv\u0003\u0002\u0002\u0002vt\u0003\u0002\u0002",
    "\u0002vw\u0003\u0002\u0002\u0002w.\u0003\u0002\u0002\u0002x|\t\u0004",
    "\u0002\u0002y{\t\u0005\u0002\u0002zy\u0003\u0002\u0002\u0002{~\u0003",
    "\u0002\u0002\u0002|z\u0003\u0002\u0002\u0002|}\u0003\u0002\u0002\u0002",
    "}0\u0003\u0002\u0002\u0002~|\u0003\u0002\u0002\u0002\u007f\u0081\t\u0006",
    "\u0002\u0002\u0080\u007f\u0003\u0002\u0002\u0002\u0081\u0082\u0003\u0002",
    "\u0002\u0002\u0082\u0080\u0003\u0002\u0002\u0002\u0082\u0083\u0003\u0002",
    "\u0002\u0002\u0083\u0084\u0003\u0002\u0002\u0002\u0084\u0085\b\u0019",
    "\u0002\u0002\u00852\u0003\u0002\u0002\u0002\u0007\u0002qv|\u0082\u0003",
    "\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class mcbLexer extends antlr4.Lexer {

    static grammarFileName = "mcb.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'if'", "'then'", "'endif'", "'block'", "'=='", 
                         "'>='", "'@'", "'.'", "'here'", "'='", "'#'", "'at'", 
                         "'as'", "'*'", "'/'", "'%'", "'+'", "'-'", "'('", 
                         "')'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, "NEWLINE", "INT", 
                          "CHAR", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "NEWLINE", "INT", "CHAR", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

mcbLexer.EOF = antlr4.Token.EOF;
mcbLexer.T__0 = 1;
mcbLexer.T__1 = 2;
mcbLexer.T__2 = 3;
mcbLexer.T__3 = 4;
mcbLexer.T__4 = 5;
mcbLexer.T__5 = 6;
mcbLexer.T__6 = 7;
mcbLexer.T__7 = 8;
mcbLexer.T__8 = 9;
mcbLexer.T__9 = 10;
mcbLexer.T__10 = 11;
mcbLexer.T__11 = 12;
mcbLexer.T__12 = 13;
mcbLexer.T__13 = 14;
mcbLexer.T__14 = 15;
mcbLexer.T__15 = 16;
mcbLexer.T__16 = 17;
mcbLexer.T__17 = 18;
mcbLexer.T__18 = 19;
mcbLexer.T__19 = 20;
mcbLexer.NEWLINE = 21;
mcbLexer.INT = 22;
mcbLexer.CHAR = 23;
mcbLexer.WS = 24;



